{"posts":[{"title":"2023程式體驗營-心得","text":"參加原因背景: 設計師目的: 加強切版觀念，減少工程師困擾 其他目的:今年的體驗營，加入了這幾個月很紅的AI工具- OpenAI對於未仔細學過js的我，剛好很好奇串api到底是如何執行，而且又能練習切新的版型、還能複習HTML和CSS。 真的是賺爛了賺爛了!!! 雖然 api 對於我來說算是越級打怪的感覺，但機會難得，因為市面上還沒看到 $699 就有這種組合包，了解一下也不錯啊，至少也多 “認識” 了項技術，但這次主力還是會放在加強切版這部分，畢竟還是怕自己在最後面作業掛在 js 部分 😅 學習過程html → css → flex(大推) → rwd響應式基本上都沒什麼問題，到了Sass/CSS 設計模式 - SMACSS和OOCSS，就開始卡關，但我的結論是，「經驗不足」沒有長期切版所以沒有組合出自己習慣的撰寫模式，畢竟這章節的目的已經寫在標題上了「教您最實用的網頁收納術」 flex的內容真的很喜歡，因為解決了大部分的排版問題，精神時光屋的作業全部做完，馬上經驗值大增，即使卡關，到discord上問，馬上一堆神人同學就能指出我哪邊寫錯、觀念不對，由衷佩服他們。 任務一 任務二作業等級表 LV1：做其中一頁的 RWD 網頁頁面，畫面不可顯示 x 軸 LV2：做所有 RWD 頁面，且 JS 動畫效果都做 LV3：介接 Get API，撈取學生作品列表，並整合在頁面上 LV4：整合 OpenAI，做自己的 AI 工具 中間空了5天好好的專注做任務二的 LV2,因先前的任務彩蛋有先把所以HTML標籤都寫出來，直接下去切才知道有些結構想的太簡單，沒考慮到響應式的內容，所以打掉重做。發現我適合一個區塊一個區塊切，太多的HTML結構會讓我混亂，找bug時太多的內容也會讓我焦慮，所以後面只要發現破版，找不到原因就是該去塊複製檔案出去找，解決了再組回去。 進入js 章節後，真的很怕聽不懂，但還好課程講解的蠻直白的，觀念也都慢慢帶，前期照著課程的code打，都還跟得上，直到 function 章節開始才有些吃力，因為發現進度落後趕不上第四周直播 - API 介接，正是我想了解的部分，所以調整了學習方式。 原本學習方式- 第一遍影片 跟著code打一遍 手寫筆記 更改為- 第一遍影片+personal note寫重點 跟著code打一遍 原本方式讓我學習每章節的速度都很慢，但卻印象很深。而更改後的學習方式，只是少了手寫但我發現我記不住，兩天就會忘，即使打字方式記錄也記不住，最後因為時間上的關係還是先依這種方式完成 LV4. 的任務。 最終作業: 連結ai小工具: 連結 任務完成後作業完成後一直在思考自己的學習問題，想到校長在直播說的有輸入也要有輸出，而我的輸出方式就是在手寫的時候，有餘裕讓自己可以慢慢消化與思考，再整理出自己的話，這可能就是最適合我自己的學習方式，雖然慢卻能牢牢記住。 雖然這有讓我稍微喪氣了一下，因為這學習速度比起之前學設計軟體的速度來說慢了好幾倍，但轉個念，多練習、多學習, 定能”熟能生巧” ，畢竟也不是誰剛接觸不熟悉的領域就能馬上上手。 心得買過不同的線上課程中，覺得六角的課程內容對於我來說是比較好吸收!此次體驗營我歸納出幾點覺得很棒的地方 課程章節切分詳細 - 所以新手可以很快地抓到重點， 講解直白 - 沒有過多的專業用語，即使有講解到術語也一定會清楚的解釋 每日作業 - 除了課堂練習外，每日作業會加入課程內容做綜合練習 補充很多 - 切版部分，老師、助教、同學都給予了很多的補充內容 即時社群 - 這部分感謝熱心的神人同學們，大部分問題都會解答 好推薦設計師來學前面 html/css，尤其是 flexbox 和 rwd ，現在figma 改版也以程式端的邏輯下去做，像是margin、padding、絕對定位還有對齊都非常相似，在設計也能更了解工程師考量的點，應該架會吵得比較少吧!!?🤣 意外收穫在某場直播中，聽到六角校長希望加入課程後有任何問題就問到爆，畢竟都花錢了(喂)他希望大家能勇於發問，於是說了「沒有問題是笨問題」這句話，提問者得到解答，回答者增加經驗- 這是雙贏。 這句話最近卻一直有意無意地浮現，很受用且溫柔的一句話，現代人生活忙碌又緊湊，大家越來越急躁、沒耐性，但這句話也讓我開始注意自己，當別人請教我問題時，是否會冒出不耐煩的念頭。每個人有各自擅長的領域，這讓我不斷提醒自己-不是每個人都與你有相同程度的知識，也不是每個人都應該知道你所懂的事情，畢竟在學習變強的路上都是從”問問題”問起，這能延伸很多議題，但重點是請保持善意與耐心，周圍的銳氣就會可愛許多。","link":"/blog/2023/06/07/2023/6-8-sixchoolCamp/"},{"title":"Flexbox 介紹","text":"排版神器 - Flexbox在課程學到了被稱為「排版神器」的flex，有別於 float 的置左/中/右，flex在排版上的則更加方便，不論時水平還是垂直的對齊，使用上都更加彈性。 準備:父層 - 外容器 / 子層 - 項目 1. flex語法: display: flex;放置: 外容器特性: (1) 內層元素會並排(只影響下一層-子層) (2) 內層 item 高度都是等高，除非其他 item 寫死高度才不會等高 等高 固定高度 (3) 自適應父層容器–指定 item 寬度時，內層總寬度 &gt; container寬度 ，做等比例伸縮範例1: 寬度- 父容器:400px 子項目: 150px 增加 item，每個 item 等比分配 範例2: 寬度- 父容器:400px / 子項目1: 100px / 子項目2: 內容撐出寬度 / 子項目3- 250px item1 和 item3 實際寬度，不會是設定的寬度，而是依照比例做分配 –未指定 item寬度時，內層總寬度 &gt; container寬度，請**搭配flex-wrap: wrap; 做換行，否則會破版範例: 寬度- 父容器:400px / 子項目- 內容撐出寬度 子項目會超出容器 搭配換行 2. flex-direction語法: flex-direction: row / row-reverse /column / column-reverse;放置: 外容器特性: 決定主軸方向(資料流向) (1) rowimg - 主軸row row row-reverse (2) columnimg - 主軸column column column-reverse 3. justify-content語法: justify-content: flex-start / flex-end / center / sapce-between / space-around / space-evenly ;放置: 外容器特性: 決定主軸對齊方式 x : 表示px距離倍數主軸方向 : row-reverse 和 column-reverse 則物件順序相反 (1) row flex-start flex-end center space-between space-around space-evenly (2) column flex-start flex-end center space-between space-around space-evenly 4. align-items語法: align-items: flex-start / flex-end / center / baseline / stretch;放置: 外容器特性: 決定交錯軸對齊方式 (1) row flex-start flex-end center space-between space-around 對齊文字基準線 交錯軸滿版 (高度為auto,不要寫死高度) (2) column flex-start flex-end center space-between space-around 對齊文字基準線 交錯軸滿版 (寬度為auto,不要寫死寬度) 5. align-self語法: align-self: auto / flex-start / flex-end / center / ;放置: 子項目特性: 決定單一子項目對齊方式 (1) row flex-start flex-end center stretch (2) column flex-start flex-end center stretch 6. flex-wrap語法: flex-wrap: nowrap / wrap / wrap-reverse;放置: 外容器特性: 子項目超出父容器的寬度時，是否換行 (1)nowrap - 未寫死寬度情況下，所有item會等比例並排 (2)wrap - 所有item超出容器寬度時，換行 (3)wrap-reverse - 換行順序相反 7. align-content語法: align-content: flex-start / flex-end / center / sapce-between / space-around / space-evenly ;放置: 外容器特性: 使用 flex-wrap: wrap; 當多行時，行的排列方式 flex-start flex-end center space-between space-around stretch stretch 設定align-items: stretch 才會填滿高度 這麼多的排版方式看得頭昏眼花，但其實配合常見版型就會發現常用的就只有其中幾種，還有像是: flex-grow / flex-shrink / flex-basis需要再來好好做一下筆記，每次研究完過幾天就忘了👶","link":"/blog/2023/07/14/2023/7-14-Flexbox%E4%BB%8B%E7%B4%B9/"}],"tags":[{"name":"前端","slug":"前端","link":"/blog/tags/%E5%89%8D%E7%AB%AF/"},{"name":"六角學院","slug":"六角學院","link":"/blog/tags/%E5%85%AD%E8%A7%92%E5%AD%B8%E9%99%A2/"},{"name":"css","slug":"css","link":"/blog/tags/css/"}],"categories":[{"name":"前端","slug":"前端","link":"/blog/categories/%E5%89%8D%E7%AB%AF/"}],"pages":[{"title":"About","text":"!!!Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.","link":"/blog/about/index.html"}]}